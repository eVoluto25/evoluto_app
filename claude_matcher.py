import openai
import os

CLAUDE_API_KEY = os.getenv("CLAUDE_KEY")

def match_bandi_with_claude(bandi_filtrati, analisi_azienda):
    import openai

    prompt = f"""Seleziona e valuta i bandi in base ai seguenti criteri.

ðŸŽ¯ 1. Criteri di Scoring e Pesi

ðŸ”¹ A. CompatibilitÃ  con la Macro Area â€“ 30%
â€¢ Se lâ€™azienda appartiene alla stessa macro area del bando, punteggio pieno.
â€¢ Se afferente ma non perfettamente allineata, punteggio parziale.

ðŸ”¹ B. SoliditÃ  Finanziaria â€“ 25%
â€¢ Valutazione basata su:
    - EBITDA Margin > 10%
    - Utile netto positivo
    - Debt/Equity tra 0.5 e 2
â€¢ Se uno o piÃ¹ indicatori sono critici, penalizzazione progressiva.

ðŸ”¹ C. Forma dellâ€™agevolazione â€“ 15%
â€¢ Fondo perduto: massimo punteggio
â€¢ Credito dâ€™imposta: medio
â€¢ Finanziamento agevolato: basso

ðŸ”¹ D. Dimensione Aziendale â€“ 10%
â€¢ Se il bando Ã¨ per PMI e lâ€™azienda Ã¨ PMI â†’ + punti
â€¢ Se mismatch â†’ penalitÃ 

ðŸ”¹ E. CapacitÃ  di co-finanziamento / Spesa ammessa â€“ 10%
â€¢ Se lâ€™azienda ha capacitÃ  di sostenere la spesa ammessa â†’ + punti

ðŸ”¹ F. Territorio e Settore ATECO â€“ 10%
â€¢ Coerenza tra bando e localizzazione / settore aziendale

ðŸ§® Output atteso:
Per ogni bando restituisci un oggetto JSON cosÃ¬ strutturato:
[
  {{
    "titolo": "...",
    "agevolazione": "...",
    "obiettivo": "...",
    "apertura": "...",
    "scadenza": "...",
    "punteggio": 87,
    "valutazione": "Alta probabilitÃ  di aggiudicazione",
    "importo": 150000
  }},
  ...
]

Bandi da valutare: {bandi_filtrati}
Analisi azienda: {analisi_azienda}
"""

    response = openai.ChatCompletion.create(
        model="claude-3-sonnet-20240229",
        messages=[{"role": "user", "content": prompt}],
        api_key=CLAUDE_API_KEY
    )

    import json
    result_text = response.choices[0].message["content"]
    try:
        return json.loads(result_text)
    except Exception:
        return []